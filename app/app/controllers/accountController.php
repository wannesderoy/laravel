<?php 
Class accountController extends BaseController {

//-- START OF SIGNIN --\\

	// Make the signin view (under views/account/signin.blade.php)
	public function getSignIn() {
		return View::make('account.signin');
	}

	// Read & validate the user email and password
	public function postSignIn() {
		$validator = Validator::make(Input::all(),
				array(
					'email' => 'required|email', //email field is required and (|) checked if email format
					'password' => 'required' // requires password to be filled in
					)
				);

		// if validation fails
		if($validator->fails() ) {
			return Redirect::route('account-sign-in') // redirect to signin page
					->withErrors($validator) // display the error generated by laravels validator
					->withInput(); // display given input (form email/username)
		} else { // If validation passes
			$auth = Auth::attempt(array( // puts the array of checks in variable $auth
					'email' 	=> Input::get('email'), // checks if email (username) is same as in db
					'password' 	=> Input::get('password'), // checks if psswrd is the same as in db
					'active' 	=> 1 // checks if user is activated (via mail confirmation)
				));

			if ($auth) { // checks if $auth is valid
				return Redirect::intended('/'); // if valid, redirect to home page
			} else { // if $auth not valid
				return Redirect::route('account-sign-in') // redirects to signin page
					->with('global', 'email/password wrong, or account not activated.'); // passes this feedback to the user
			}
		} // if another error occurs or validation fails
		return Redirect::route('account-sign-in') // redirect to signin page
			->with('global', 'there was a problem signing you in.'); // passes this feedback to the user
	}

//-- END OF SIGNIN --\\

//-- START OF CREATE ACCOUNT--\\

	public function getCreate() {
		// Make the create account view (under views/account/create.blade.php) 
		return View::make('account.create');
	}
	public function postCreate() {
		$validator = Validator::make(Input::all(), // puts whole array of user input in $validator
				array(
					'email' 			=> 'required|max:50|email|unique:users', // email field with all the conditions
					'username' 			=> 'required|max:20|min:3|unique:users', // username field with all the conditions
					'password' 			=> 'required|min:3|', // psswrd field with all the conditions
					'password_again' 	=> 'required|same:password' // user is required to fill in pssword twice, the same
					)
			);
		// if user input fails
		if($validator -> fails()) {
			return Redirect::route('account-create') // redirect to create account page
			->withErrors($validator) // display the error generated by laravels validator
			->withInput(); // keeps user input in certain fields (not password)

		} else {
			// create account by setting user input in variables
			$email 		= Input::get('email'); 
			$username 	= Input::get('username');
			$password 	= Input::get('password');

			// generate random activation Code
			$code = str_random(60);

			// create the user in the database with his data
			$user = User::create(array(
					'email' 	=> $email,
					'username' 	=> $username,
					'password' 	=> Hash::make($password),
					'code' 		=> $code,
					'active' 	=> 0
				)
			);
			// if user is created in database
			if($user) {
				
				// send en email as confirmation
				Mail::send('emails.auth.activate', array( // path to the data (html) to send in mail
						
						// link in mail template is route to page + unique code. The users name is also filled in
						// then create the actual mail ($message) + fill in subject. Then send mail to user email
						'link' => URL::route('account-activate', $code), 'username' => $username), function($message) use ($user) { 
						$message->to($user->email, $user->username)->subject('Activate your account');
				});

				// after send
				return Redirect::route('home') // redirect to home 
					// with feedback to user about his account and email
					->with('global', 'Your account has been created. We send an email to active your account.');
			} 
		}
	}
//-- END OF CREATE ACCOUNT--\\


//-- START OF ACTIVATION ACCOUNT--\\

	public function getActivate($code) { 
		// get the current user's code when not active yet
		$user = User::where('code', '=', $code)->where('active', '=', 0);

 		// checks if $user is available based on where clause
		if ($user->count()){ 
			$user = $user->first(); // the first record based on results of where clause
			
			//update user to active state
			$user->active 	= 1; // set active to 1
			$user->code 	= ''; // remove unique code (save space on db)
			
			if ($user->save()) { // saves the updated information to the specific user
				return Redirect::route('home') // if save passes, redirects to home
					->with('global', 'Activated! you can now sign in.'); // passes feedback to the user about the succes
			}	
		}
		// fallback if non of the previous checks pas
		return Redirect::route('home') // redirect to home page
			->with('global', 'We could not activate your account, try again later'); // passes feedback to the user about what heppaned
	}

	//-- END OF ACTIVATION ACCOUNT--\\

}
?>